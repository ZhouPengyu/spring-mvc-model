<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hm.his.module.order.dao.OrderExamMapper">
    <resultMap id="BaseResultMap" type="com.hm.his.module.order.model.OrderExam">
        <id column="id" property="id"/>
        <result column="count" property="count"/>
        <result column="create_date" property="createDate"/>
        <result column="exam_id" property="examId"/>
        <result column="exam_name" property="examName"/>
        <result column="modify_date" property="modifyDate"/>
        <result column="order_item_list_id" property="orderItemListId"/>
        <result column="order_no" property="orderNo"/>
        <result column="receivable_amt" property="receivableAmt"/>
        <result column="sale_price" property="salePrice"/>
        <result column="charge_status" property="chargeStatus"/>
        <result column="patient_exam_id" property="patientExamId"/>
        <result column="record_id" property="recordId"/>
        <result column="data_source" property="dataSource"/>
        <result column="hospital_id" property="hospitalId"/>
        <result column="creater" property="creater"/>
        <result column="cost" property="cost"/>
        <result column="real_name" property="doctorName"/>
    </resultMap>
    <sql id="Base_Column_List">
		id, count, create_date, exam_id, exam_name, modify_date,
		order_item_list_id, order_no,
		receivable_amt, sale_price, cost,
		charge_status,patient_exam_id,record_id,hospital_id
	</sql>

    <sql id="OrderExamAndOrderItemCharge">
		t.id, t.count, t.create_date, t.exam_id, t.exam_name,
		t.modify_date,
		t.order_item_list_id, t.order_no,
		t.sale_price,t.patient_exam_id,t.record_id,
		t.data_source,t.hospital_id,
		a.charge_status,
		a.receivable_amt
	</sql>

    <!--<select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="OrderExamAndOrderItemCharge" />
        from
        order_exam t ,order_item_charge a
        where t.id =
        #{id} and
        t.id=a.item_id and a.item_type=1
    </select>-->
    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="OrderExamAndOrderItemCharge"/>
        from
        order_exam t ,order_item_charge a
        where
        t.id=a.item_id and
        a.item_type=1
    </select>
    <select id="searchOrderExamNames" resultType="java.lang.String"
            parameterType="com.hm.his.module.statistics.pojo.NameRequst">
        select DISTINCT
        exam_name
        from
        order_exam
        where
        exam_name like
        CONCAT('%',#{name},'%')
        <if test="hospitalId!=null">
            and hospital_id=#{hospitalId}
        </if>
        <if test="startRecord!=null and pageSize!=null">
            limit #{startRecord},#{pageSize}
        </if>
    </select>
    <select id="selectByRecordIdAndPatientExamId" resultMap="BaseResultMap"
            parameterType="java.lang.Long">
        select
        <include refid="OrderExamAndOrderItemCharge"/>
        from
        order_exam t ,order_item_charge a
        where t.record_id
        =
        #{recordId} and
        t.patient_exam_id=#{patientExamId}
        and t.id=a.item_id and a.item_type=1
        limit 1
    </select>
    <select id="selectByOrderItemListIdAndChargeStatus" resultMap="BaseResultMap">
        select
        <include refid="OrderExamAndOrderItemCharge"/>
        from
        order_exam t ,order_item_charge a
        where
        t.order_item_list_id =
        #{orderItemListId} and
        t.id=a.item_id and a.item_type=1
        <if test="chargeStatus==1">
            and a.charge_status=1
        </if>
        <if test="chargeStatus!=1">
            and a.charge_status &amp; #{chargeStatus}&gt;0
        </if>
    </select>
    <delete id="delete" parameterType="java.lang.Long">
		delete from order_exam
		where id
		= #{id}
	</delete>
    <delete id="deleteByOrderItemListId" parameterType="java.lang.Long">
		delete from
		order_exam
		where order_item_list_id
		= #{orderItemListId}
	</delete>
    <insert id="insert" parameterType="com.hm.his.module.order.model.OrderExam"
            useGeneratedKeys="true" keyProperty="id">
		insert into order_exam (
		count,
		exam_id, exam_name,
		order_item_list_id, order_no,
		sale_price, cost, patient_exam_id,record_id,data_source,hospital_id)
		values (
		#{count},
		#{examId},
		#{examName},
		#{orderItemListId}, #{orderNo},
		#{salePrice}, #{cost},
		#{patientExamId},#{recordId},#{dataSource},#{hospitalId}
		)
	</insert>
    <insert id="insertList" parameterType="com.hm.his.module.order.model.OrderExam"  useGeneratedKeys="true" keyProperty="id">
        insert into order_exam (
        count,
        exam_id, exam_name,
        order_item_list_id,order_no,
        sale_price, cost, patient_exam_id,record_id,data_source,hospital_id)
        values
        <foreach collection="list" item="item" index="index"
            separator=",">
            (#{item.count}, #{item.examId},
            #{item.examName},
            #{item.orderItemListId},
            #{item.orderNo},
            #{item.salePrice},
            #{item.cost},
            #{item.patientExamId},#{item.recordId},#{item.dataSource},#{item.hospitalId}
            )
        </foreach>
    </insert>

    <update id="update" parameterType="com.hm.his.module.order.model.OrderExam">
        update order_exam
        <set>
            <include refid="setSql"></include>
        </set>
        where id = #{id}
    </update>
    <sql id="setSql">
        <if test="count != null">
            count = #{count},
        </if>
        <if test="createDate != null">
            create_date = #{createDate},
        </if>
        <if test="examId != null">
            exam_id = #{examId},
        </if>
        <if test="examName != null">
            exam_name = #{examName},
        </if>
        <if test="modifyDate != null">
            modify_date = #{modifyDate},
        </if>
        <if test="orderItemListId != null">
            order_item_list_id = #{orderItemListId},
        </if>
        <if test="orderNo != null">
            order_no = #{orderNo},
        </if>
        <if test="salePrice != null">
            sale_price = #{salePrice},
        </if>
        <if test="patientExamId != null">
            patient_exam_id = #{patientExamId},
        </if>
        <if test="recordId != null">
            record_id = #{recordId},
        </if>
        <if test="dataSource != null">
            data_source = #{dataSource},
        </if>
        <if test="hospitalId != null">
            hospital_id = #{hospitalId}
        </if>
    </sql>
    <!-- 统计相关sql start -->
    <resultMap id="ExamStatisticsPojo"
               type="com.hm.his.module.statistics.pojo.ExamStatisticsPojo">
        <result column="totalSaleAmt" property="totalSaleAmt"/>
        <result column="examCount" property="examCount"/>
    </resultMap>
    <resultMap id="ExamStatisticsItemPojo"
               type="com.hm.his.module.statistics.pojo.ExamStatisticsItemPojo">
        <result column="exam_name" property="examName"/>
        <result column="count" property="count"/>
        <result column="sale_amt" property="saleAmt"/>
        <result column="cost_amt" property="costAmt"/>
    </resultMap>

    <select id="selectExamStatisticsItemPojos" resultMap="ExamStatisticsItemPojo"
            parameterType="com.hm.his.module.statistics.pojo.StatisticsRequest">
        SELECT a.exam_name, SUM(count) count, sum(b.receivable_amt) sale_amt,
        CASE
            WHEN SUM(a.count * a.cost) is null THEN 0
            ELSE SUM(a.count * a.cost) END cost_amt
        FROM
        order_exam a,order_item_charge b
        where a.id=b.item_id and b.item_type=1
        and b.charge_status =2
        <if test="hospitalId!=null">
            and hospital_id=#{hospitalId}
        </if>
        <if test="examName!=null">
            and a.exam_name like CONCAT('%',#{examName},'%')
        </if>
        <if test="startDate!=null">
            <![CDATA[and  b.charge_date >= #{startDate} ]]>
        </if>
        <if test="endDate!=null">
            <![CDATA[and  b.charge_date <= #{endDate} ]]>
        </if>
        group by a.exam_name order by sale_amt desc
        <if test="startRecord!=null and pageSize!=null">
            limit #{startRecord},#{pageSize}
        </if>
    </select>
    <select id="selectCountOfExamStatisticsItemPojos" resultType="java.lang.Integer"
            parameterType="com.hm.his.module.statistics.pojo.StatisticsRequest">
        select count(*) from (
        select count(*) from
        order_exam
        a,order_item_charge b
        where a.id=b.item_id and b.item_type=1
        and
        b.charge_status =2
        <if test="hospitalId!=null">
            and hospital_id=#{hospitalId}
        </if>
        <if test="examName!=null">
            and a.exam_name like CONCAT('%',#{examName},'%')
        </if>
        <if test="startDate!=null">
            <![CDATA[ and b.charge_date >= #{startDate} ]]>
        </if>
        <if test="endDate!=null">
            <![CDATA[ and b.charge_date <= #{endDate} ]]>
        </if>
        group by a.exam_name
        ) t;
    </select>
    <select id="selectTotalSaleAmtAndCount" resultMap="ExamStatisticsPojo"
            parameterType="com.hm.his.module.statistics.pojo.StatisticsRequest">
        select SUM(count) examCount ,sum(b.receivable_amt) totalSaleAmt from
        order_exam a,order_item_charge b
        where a.id=b.item_id and b.item_type=1
        and b.charge_status =2
        <if test="hospitalId!=null">
            and hospital_id=#{hospitalId}
        </if>
        <if test="examName!=null">
            and a.exam_name like CONCAT('%',#{examName},'%')
        </if>
        <if test="startDate!=null">
            <![CDATA[and  b.charge_date >= #{startDate} ]]>
        </if>
        <if test="endDate!=null">
            <![CDATA[and  b.charge_date <= #{endDate} ]]>
        </if>
    </select>

    <select id="selectLoadExamStatistics" resultMap="BaseResultMap"
            parameterType="com.hm.his.module.statistics.pojo.StatisticsRequest">
        SELECT t1.creater, t1.order_no,
        t1.modify_date, t1.receivable_amt, t1.real_name, oe.exam_id,
        oe.exam_name, oe.sale_price, oe.count FROM order_exam oe
        JOIN
        (
            SELECT t2.creater, t2.order_no, t2.modify_date, t2.item_id, t2.receivable_amt, t2.item_type, d.real_name FROM doctor d
            JOIN(
                SELECT ho.creater, ho.order_no, oic.modify_date, oic.item_id, oic.receivable_amt, oic.item_type FROM
                hospital_order ho
                JOIN order_item_charge oic
                ON
                ho.order_no = oic.order_no
                WHERE oic.charge_status=2
                <if test="hospitalId != null">
                    AND ho.hospital_id = #{hospitalId}
                </if>
                <if test="doctorName !=null">
                    AND ho.creater in(
                    SELECT doctor_id creater
                    FROM doctor
                    WHERE real_name LIKE CONCAT('%',#{doctorName},'%'))
                </if>
                <if test="startDate!=null">
                    <![CDATA[and  oic.modify_date >= #{startDate} ]]>
                </if>
                <if test="endDate!=null">
                    <![CDATA[and  oic.modify_date <= #{endDate} ]]>
                </if>
            )t2
            ON d.doctor_id = t2.creater
        )t1
        on t1.item_id = oe.id
        WHERE t1.item_type=1
        <if test="drugType !=17 and drugType !=null">
            AND oe.exam_name='无关查询'
        </if>
    </select>
    <!-- 统计相关sql end -->
</mapper>